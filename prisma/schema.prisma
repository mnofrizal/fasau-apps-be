// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Inventory Models
enum TransactionType {
  IN
  OUT
}

enum TransactionStatus {
  DELIVERING
  RECEIVED
  DELIVERED
}

enum ItemUnit {
  pcs
  box
  kg
  meter
  roll
  liter
  pack
  set
  buah
  unit
  lembar
  pal
  galon
  biji
  kaleng
  zak
  karung
  m3
}

model InventoryItem {
  id        Int       @id @default(autoincrement())
  name      String
  category  String    @default("OTHER")
  quantity  Int       @default(0)
  unit      ItemUnit?
  location  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  transactionItems TransactionItem[]

  @@map("inventory_items")
}

model InventoryTransaction {
  id        Int               @id @default(autoincrement())
  type      TransactionType
  reference String // PO number or reference number
  notes     String?           @db.Text
  createdBy String
  createdAt DateTime          @default(now())
  status    TransactionStatus @default(DELIVERING)
  to        String?

  // Relations
  items TransactionItem[]

  @@map("inventory_transactions")
}

model TransactionItem {
  id       Int     @id @default(autoincrement())
  quantity Int
  notes    String? @db.Text

  // Relations
  transaction   InventoryTransaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  transactionId Int

  item   InventoryItem @relation(fields: [itemId], references: [id])
  itemId Int

  @@map("transaction_items")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

enum TaskStatus {
  COMPLETED
  CANCEL
  INPROGRESS
  BACKLOG
}

enum TaskCategory {
  MEMO
  TASK
  LAPORAN
  JASA
  MATERIAL
  TEMUAN
}

model Task {
  id          Int          @id @default(autoincrement())
  title       String
  category    TaskCategory @default(TASK)
  status      TaskStatus   @default(INPROGRESS)
  keterangan  String?      @db.Text
  isUrgent    Boolean      @default(false)
  waMessageId String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  // Relation fields
  taskReport   TaskReport? @relation("TaskFromReport", fields: [taskReportId], references: [id])
  taskReportId Int?        @unique

  // Status history
  statusHistory StatusHistory[] @relation("TaskStatusHistory")

  @@map("tasks")
}

model StatusHistory {
  id        Int        @id @default(autoincrement())
  status    TaskStatus
  notes     String?    @db.Text
  changedBy String? // Name/identifier of person who changed the status
  createdAt DateTime   @default(now())

  // Relations (both optional)
  task   Task? @relation("TaskStatusHistory", fields: [taskId], references: [id], onDelete: Cascade)
  taskId Int?

  report   TaskReport? @relation("ReportStatusHistory", fields: [reportId], references: [id], onDelete: Cascade)
  reportId Int?

  @@map("status_history")
}

model WhatsappConfig {
  id        Int      @id @default(autoincrement())
  groupId   String   @unique
  groupName String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("whatsapp_configs")
}

enum AcaraStatus {
  UPCOMING
  DONE
  CANCEL
}

model Acara {
  id          Int         @id @default(autoincrement())
  title       String
  dateTime    DateTime
  location    String
  status      AcaraStatus @default(UPCOMING)
  description String?     @db.Text
  category    String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("acara")
}

enum ReportCategory {
  CM
  PM
  AC
  MK
  TIJ
  TDP
  JSI
  PMT
  PST
}

enum ReportSubCategory {
  LAPORAN
  TEMUAN
}

model TaskReport {
  id           Int                @id @default(autoincrement())
  evidence     String? // URL or file path to the evidence
  evidenceDone String? // URL or file path to the evidence after task is done
  description  String             @db.Text
  pelapor      String
  phone        String
  category     ReportCategory
  subCategory  ReportSubCategory? @default(LAPORAN)
  tindakan     String?            @db.Text
  status       TaskStatus         @default(BACKLOG)
  material     Json? // Array of material items
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt

  // Relation fields
  escalatedToTask Task?   @relation("TaskFromReport")
  isEscalated     Boolean @default(false)

  // Status history
  statusHistory StatusHistory[] @relation("ReportStatusHistory")

  @@map("task_reports")
}
