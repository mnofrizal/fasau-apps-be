### Variables
@baseUrl = http://localhost:3900/api/v1

### ==================== Inventory Routes ====================

### Get All Inventory Items
GET {{baseUrl}}/inventory/items

### Create New Item
POST {{baseUrl}}/inventory/items
Content-Type: application/json

{
  "name": "New Office Chair1",
  "unit": "pcs"
}
# Notes for Create Item:
# - Item name must be unique, duplicate names will be rejected
# - Location defaults to "Gudang Eks Golf" if not specified
# - Category defaults to "OTHER" if not specified
# - Quantity defaults to 0 if not specified
# - Unit is optional, can be one of:
#   - pcs (pieces)
#   - box
#   - kg (kilograms)
#   - meter
#   - roll
#   - liter
#   - pack
#   - set
#   - buah
#   - unit
#   - lembar
#   - pal
#   - galon
#   - biji

### Create Item with Custom Category, Location and Unit
POST {{baseUrl}}/inventory/items
Content-Type: application/json

{
  "name": "Network Switch 24-Port",
  "category": "Network Equipment",
  "quantity": 2,
  "location": "Server Room",
  "unit": "unit"
}

### Example - Try to Create Duplicate Item (Will Fail)
POST {{baseUrl}}/inventory/items
Content-Type: application/json

{
  "name": "New Office Chair",
  "category": "CHAIR"
}

### Get Items by Category
GET {{baseUrl}}/inventory/items/category/CHAIR

### Search Items by Name (Case Insensitive)
# Will find items containing "chair" regardless of case:
# e.g., "Office Chair", "CHAIR executive", "Gaming chair"
GET {{baseUrl}}/inventory/items/search/chair

### Search Items by Name - Example with Mixed Case
GET {{baseUrl}}/inventory/items/search/OfFiCe

### Get Item by ID
GET {{baseUrl}}/inventory/items/1

### Record Stock IN (Receiving Items)
POST {{baseUrl}}/inventory/movements/batch
Content-Type: application/json

{
  "type": "IN",
  "reference": "PO/2024/001",
  "notes": "Office furniture delivery",
  "createdBy": "John Doe",
  "items": [
    {
      "name": "New Office Chair",
      "category": "CHAIR",
      "quantity": 3,
      "location": "Storage Room B",
      "unit": "pcs",
      "notes": "Kursi ergonomis untuk kantor"
    }
  ]
}

### Record Stock OUT (Assignment)
POST {{baseUrl}}/inventory/movements/batch
Content-Type: application/json

{
  "type": "OUT",
  "reference": "OUT/IT/2024/001",
  "notes": "IT equipment assignment",
  "createdBy": "Jane Smith",
  "items": [
    {
      "name": "Laptop Dell Latitude 5420",
      "category": "COMPUTER",
      "quantity": 1,
      "unit": "unit",
      "notes": "Laptop untuk developer baru"
    },
    {
      "name": "Monitor Dell P2419H 24-inch",
      "category": "ELECTRONIC",
      "quantity": 2,
      "unit": "unit",
      "notes": "Monitor untuk setup dual screen"
    }
  ]
}

### Example with Custom Categories
POST {{baseUrl}}/inventory/movements/batch
Content-Type: application/json

{
  "type": "IN",
  "reference": "PO/2024/002",
  "notes": "New equipment delivery",
  "createdBy": "John Doe",
  "items": [
    {
      "name": "Genset 10KVA",
      "category": "Power Generator",
      "quantity": 1,
      "unit": "unit",
      "location": "Power Room",
      "notes": "Backup power supply"
    },
    {
      "name": "UPS 3000VA",
      "category": "Power Supply",
      "quantity": 2,
      "unit": "unit",
      "location": "Server Room",
      "notes": "For server backup power"
    }
  ]
}

### Note on Categories:
# Categories are dynamic and will be created automatically when new items are added
# Some suggested categories as examples:
# - Kursi (Chairs)
# - Meja (Tables)
# - Komputer (Computers)
# - Printer
# - Power Generator
# - Power Supply
# - Network Equipment
# - Storage
# - Electronics
# But you can create any new category as needed!

### Get All Transactions
GET {{baseUrl}}/inventory/transactions

### Get Transaction by ID
GET {{baseUrl}}/inventory/transactions/1

### Get Transaction by Reference
GET {{baseUrl}}/inventory/transactions/reference/PO%2F2024%2F001

### ==================== Items Management ====================

### Update Item
PUT {{baseUrl}}/inventory/items/1
Content-Type: application/json

{
  "name": "Updated Chair Name",
  "category": "CHAIR",
  "location": "Meeting Room B",
  "unit": "buah"
}

### Delete Item
DELETE {{baseUrl}}/inventory/items/1

### ==================== Transactions Management ====================

### Update Transaction
PUT {{baseUrl}}/inventory/transactions/1
Content-Type: application/json

{
  "reference": "PO/2024/001-REV",
  "notes": "Updated delivery notes"
}

### Delete Transaction
DELETE {{baseUrl}}/inventory/transactions/1

### Note on Updates and Deletes:
# - Items cannot be deleted if they have existing transactions
# - Deleting a transaction will automatically:
#   1. Reverse the quantity changes (add back for OUT, subtract for IN)
#   2. Delete associated transactionItems through cascade
